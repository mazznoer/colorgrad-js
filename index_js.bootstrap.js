"use strict";(self.webpackChunkgradient_playground=self.webpackChunkgradient_playground||[]).push([["index_js"],{"../pkg/colorgrad_bg.js":
/*!******************************!*\
  !*** ../pkg/colorgrad_bg.js ***!
  \******************************/(module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Color": () => (/* binding */ Color),\n/* harmony export */   "Gradient": () => (/* binding */ Gradient),\n/* harmony export */   "__wbg_color_new": () => (/* binding */ __wbg_color_new),\n/* harmony export */   "__wbg_new_3ee7ebe9952c1fbd": () => (/* binding */ __wbg_new_3ee7ebe9952c1fbd),\n/* harmony export */   "__wbg_new_ee1a3da85465d621": () => (/* binding */ __wbg_new_ee1a3da85465d621),\n/* harmony export */   "__wbg_newwithlength_df0e16f0b90b6295": () => (/* binding */ __wbg_newwithlength_df0e16f0b90b6295),\n/* harmony export */   "__wbg_push_0bc7fce4a139a883": () => (/* binding */ __wbg_push_0bc7fce4a139a883),\n/* harmony export */   "__wbg_set_64cc39858b2ec3f1": () => (/* binding */ __wbg_set_64cc39858b2ec3f1),\n/* harmony export */   "__wbindgen_is_null": () => (/* binding */ __wbindgen_is_null),\n/* harmony export */   "__wbindgen_is_undefined": () => (/* binding */ __wbindgen_is_undefined),\n/* harmony export */   "__wbindgen_json_serialize": () => (/* binding */ __wbindgen_json_serialize),\n/* harmony export */   "__wbindgen_number_new": () => (/* binding */ __wbindgen_number_new),\n/* harmony export */   "__wbindgen_object_drop_ref": () => (/* binding */ __wbindgen_object_drop_ref),\n/* harmony export */   "__wbindgen_throw": () => (/* binding */ __wbindgen_throw),\n/* harmony export */   "cividis": () => (/* binding */ cividis),\n/* harmony export */   "cool": () => (/* binding */ cool),\n/* harmony export */   "cubehelix_default": () => (/* binding */ cubehelix_default),\n/* harmony export */   "custom_gradient": () => (/* binding */ custom_gradient),\n/* harmony export */   "parse_ggr": () => (/* binding */ parse_ggr),\n/* harmony export */   "rainbow": () => (/* binding */ rainbow),\n/* harmony export */   "sinebow": () => (/* binding */ sinebow),\n/* harmony export */   "turbo": () => (/* binding */ turbo),\n/* harmony export */   "warm": () => (/* binding */ warm)\n/* harmony export */ });\n/* harmony import */ var _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./colorgrad_bg.wasm */ "../pkg/colorgrad_bg.wasm");\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedUint8Memory0 = new Uint8Array();\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(_colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nconst lTextEncoder = typeof TextEncoder === \'undefined\' ? (0, module.require)(\'util\').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder(\'utf-8\');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === \'function\'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachedInt32Memory0 = new Int32Array();\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(_colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nconst lTextDecoder = typeof TextDecoder === \'undefined\' ? (0, module.require)(\'util\').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder(\'utf-8\', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n/**\n* @returns {Gradient}\n*/\nfunction rainbow() {\n    const ret = _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.rainbow();\n    return Gradient.__wrap(ret);\n}\n\n/**\n* @returns {Gradient}\n*/\nfunction sinebow() {\n    const ret = _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.sinebow();\n    return Gradient.__wrap(ret);\n}\n\n/**\n* @returns {Gradient}\n*/\nfunction turbo() {\n    const ret = _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.turbo();\n    return Gradient.__wrap(ret);\n}\n\n/**\n* @returns {Gradient}\n*/\nfunction cividis() {\n    const ret = _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cividis();\n    return Gradient.__wrap(ret);\n}\n\n/**\n* @returns {Gradient}\n*/\nfunction cubehelix_default() {\n    const ret = _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cubehelix_default();\n    return Gradient.__wrap(ret);\n}\n\n/**\n* @returns {Gradient}\n*/\nfunction cool() {\n    const ret = _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cool();\n    return Gradient.__wrap(ret);\n}\n\n/**\n* @returns {Gradient}\n*/\nfunction warm() {\n    const ret = _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.warm();\n    return Gradient.__wrap(ret);\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n/**\n* @param {any} colors\n* @param {any} domain\n* @param {string | undefined} mode\n* @param {string | undefined} interpolation\n* @returns {Gradient}\n*/\nfunction custom_gradient(colors, domain, mode, interpolation) {\n    try {\n        const retptr = _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = isLikeNone(mode) ? 0 : passStringToWasm0(mode, _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc, _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = isLikeNone(interpolation) ? 0 : passStringToWasm0(interpolation, _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc, _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.custom_gradient(retptr, addHeapObject(colors), addHeapObject(domain), ptr0, len0, ptr1, len1);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return Gradient.__wrap(r0);\n    } finally {\n        _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {string} ggr\n* @param {string | undefined} foreground\n* @param {string | undefined} background\n* @returns {Gradient}\n*/\nfunction parse_ggr(ggr, foreground, background) {\n    try {\n        const retptr = _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(ggr, _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc, _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        var ptr1 = isLikeNone(foreground) ? 0 : passStringToWasm0(foreground, _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc, _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ptr2 = isLikeNone(background) ? 0 : passStringToWasm0(background, _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc, _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.parse_ggr(retptr, ptr0, len0, ptr1, len1, ptr2, len2);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return Gradient.__wrap(r0);\n    } finally {\n        _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n*/\nclass Color {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Color.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_color_free(ptr);\n    }\n    /**\n    * @param {string} s\n    * @returns {Color}\n    */\n    static parse(s) {\n        try {\n            const retptr = _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(s, _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc, _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.color_parse(retptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return Color.__wrap(r0);\n        } finally {\n            _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {Array<any>}\n    */\n    rgba() {\n        const ret = _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.color_rgba(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @returns {Array<any>}\n    */\n    rgba8() {\n        const ret = _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.color_rgba8(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @returns {string}\n    */\n    hex() {\n        try {\n            const retptr = _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n            _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.color_hex(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n            _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1);\n        }\n    }\n}\n/**\n*/\nclass Gradient {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Gradient.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_gradient_free(ptr);\n    }\n    /**\n    * @returns {Array<any>}\n    */\n    domain() {\n        const ret = _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.gradient_domain(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @param {number} t\n    * @returns {Color}\n    */\n    at(t) {\n        const ret = _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.gradient_at(this.ptr, t);\n        return Color.__wrap(ret);\n    }\n    /**\n    * @param {number} t\n    * @returns {Color}\n    */\n    repeat_at(t) {\n        const ret = _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.gradient_repeat_at(this.ptr, t);\n        return Color.__wrap(ret);\n    }\n    /**\n    * @param {number} t\n    * @returns {Color}\n    */\n    reflect_at(t) {\n        const ret = _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.gradient_reflect_at(this.ptr, t);\n        return Color.__wrap(ret);\n    }\n    /**\n    * @param {number} n\n    * @returns {Array<any>}\n    */\n    colors(n) {\n        const ret = _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.gradient_colors(this.ptr, n);\n        return takeObject(ret);\n    }\n    /**\n    * @param {number} segment\n    * @param {number} smoothness\n    * @returns {Gradient}\n    */\n    sharp(segment, smoothness) {\n        const ret = _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.gradient_sharp(this.ptr, segment, smoothness);\n        return Gradient.__wrap(ret);\n    }\n}\n\nfunction __wbg_new_3ee7ebe9952c1fbd(arg0, arg1) {\n    const ret = new Error(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nfunction __wbg_new_ee1a3da85465d621() {\n    const ret = new Array();\n    return addHeapObject(ret);\n};\n\nfunction __wbindgen_number_new(arg0) {\n    const ret = arg0;\n    return addHeapObject(ret);\n};\n\nfunction __wbg_push_0bc7fce4a139a883(arg0, arg1) {\n    const ret = getObject(arg0).push(getObject(arg1));\n    return ret;\n};\n\nfunction __wbindgen_object_drop_ref(arg0) {\n    takeObject(arg0);\n};\n\nfunction __wbg_newwithlength_df0e16f0b90b6295(arg0) {\n    const ret = new Array(arg0 >>> 0);\n    return addHeapObject(ret);\n};\n\nfunction __wbg_set_64cc39858b2ec3f1(arg0, arg1, arg2) {\n    getObject(arg0)[arg1 >>> 0] = takeObject(arg2);\n};\n\nfunction __wbg_color_new(arg0) {\n    const ret = Color.__wrap(arg0);\n    return addHeapObject(ret);\n};\n\nfunction __wbindgen_is_undefined(arg0) {\n    const ret = getObject(arg0) === undefined;\n    return ret;\n};\n\nfunction __wbindgen_is_null(arg0) {\n    const ret = getObject(arg0) === null;\n    return ret;\n};\n\nfunction __wbindgen_json_serialize(arg0, arg1) {\n    const obj = getObject(arg1);\n    const ret = JSON.stringify(obj === undefined ? null : obj);\n    const ptr0 = passStringToWasm0(ret, _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc, _colorgrad_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nfunction __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n\n\n//# sourceURL=webpack://gradient-playground/../pkg/colorgrad_bg.js?')},"./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var colorgrad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! colorgrad */ \"../pkg/colorgrad_bg.js\");\n\n\nlet width = window.innerWidth;\nlet height = 70;\n\nlet canvas = document.getElementById('canvas');\nlet ctx = canvas.getContext('2d');\ncanvas.width = width;\ncanvas.height = height;\nlet canvasWidth = canvas.width;\nlet canvasHeight = canvas.height;\n\nlet colors = document.getElementById('colors');\nlet position = document.getElementById('position');\nlet blend = document.getElementById('blend-mode');\nlet interp = document.getElementById('interpolation-mode');\nlet sharp = document.getElementById('sharp');\nlet sharp_segment = document.getElementById('sharp-segment');\nlet sharp_smoothness = document.getElementById('sharp-smoothness');\nlet print_setting = document.getElementById('print-settings');\n\nclass Konsole {\n    constructor(el) {\n        this.el = el;\n    }\n\n    clear() {\n        this.el.innerHTML = '';\n    }\n\n    log(msg) {\n        this.el.innerHTML = msg;\n    }\n\n    error(msg) {\n        this.el.innerHTML = `<span class='error'>${msg}</span>`;\n    }\n}\n\nconst konsole = new Konsole(document.getElementById('output'));\n\nupdate();\n\nfunction update(drawg = true) {\n    konsole.clear();\n\n    let cols = split_colors(colors.value);\n    let pos = split_pos(position.value);\n    let bld = blend.value;\n    let intp = interp.value;\n    let shp = sharp.checked;\n    let shpc = sharp_segment.value;\n    let shps = sharp_smoothness.value;\n\n    try {\n        let grad = colorgrad__WEBPACK_IMPORTED_MODULE_0__.custom_gradient(cols, pos, bld, intp);\n        if (shp) {\n            grad = grad.sharp(shpc, shps);\n        }\n        if (drawg) {\n            draw(grad);\n        } else {\n            konsole.log(`colors: [${cols.map(x => `\"${x}\"`).join(', ')}]\\npositions: [${pos.join(', ')}]`.trim());\n            /*for (let s of cols) {\n            \ttry {\n            \t\tlet c = colorgrad.Color.parse(s);\n            \t\tconsole.log(c.hex());\n            \t\tlet el = document.createElement('input');\n            \t\tel.setAttribute('type', 'color');\n            \t\tel.setAttribute('value', c.hex());\n            \t\tdocument.body.appendChild(el);\n            \t} catch(e) {\n            \t\tkonsole.log(e);\n            \t}\n            }*/\n        }\n    } catch (e) {\n        konsole.error(e);\n    }\n}\n\nfunction draw(grad) {\n    let imageData = ctx.getImageData(0, 0, canvasWidth, canvasHeight);\n    let buf = new ArrayBuffer(imageData.data.length);\n    let buf8 = new Uint8ClampedArray(buf);\n    let data = new Uint32Array(buf);\n\n    for (let y = 0; y < canvasHeight; ++y) {\n        for (let x = 0; x < canvasWidth; ++x) {\n            let [r, g, b, a] = grad.at(x / canvasWidth).rgba8();\n            data[y * canvasWidth + x] = (a << 24) | (b << 16) | (g << 8) | r;\n        }\n    }\n\n    imageData.data.set(buf8);\n    ctx.putImageData(imageData, 0, 0);\n}\n\ncolors.addEventListener('change', () => update());\nposition.addEventListener('change', () => update());\nblend.addEventListener('change', () => update());\ninterp.addEventListener('change', () => update());\nsharp.addEventListener('change', () => update());\nsharp_segment.addEventListener('change', () => update());\nsharp_smoothness.addEventListener('change', () => update());\nprint_setting.addEventListener('click', () => update(false));\n\nfunction trim(s) {\n    return s.replace(/(^['\"\\s]*|['\"\\s]*$)/g, \"\");\n}\n\nfunction split_colors(str) {\n    let colors = [];\n    for (let x of str.split(/,(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/)) {\n        let s = trim(x);\n        if (s == '') {\n            continue;\n        }\n        colors.push(s);\n    }\n    return colors;\n}\n\nfunction split_pos(str) {\n    let pos = [];\n    for (let x of str.split(',')) {\n        let s = x.trim();\n        if (s == '') {\n            continue;\n        }\n        pos.push(parseFloat(s));\n    }\n    return pos;\n}\n\n//# sourceURL=webpack://gradient-playground/./index.js?")},"../pkg/colorgrad_bg.wasm":
/*!********************************!*\
  !*** ../pkg/colorgrad_bg.wasm ***!
  \********************************/(module,exports,__webpack_require__)=>{eval('"use strict";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.id];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name) exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./colorgrad_bg.js */ "../pkg/colorgrad_bg.js");\n\n\n// exec wasm module\nwasmExports[""]()\n\n//# sourceURL=webpack://gradient-playground/../pkg/colorgrad_bg.wasm?')}}]);